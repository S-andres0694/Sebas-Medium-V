---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

/**
 * A component that renders a link with a class name that can be used to style the link.
 *
 * @param {Props} props - The props for the component.
 * @param {string} props.href - The href of the link.
 * @param {string} props.class - The class name of the link.
 */

const { href, class: className, ...props } = Astro.props;
const pathname: string = Astro.url.pathname.replace(
	import.meta.env.BASE_URL,
	'',
);
const subpath: RegExpMatchArray | null = pathname.match(/[^\/]+/g);
const isActive: boolean =
	href === pathname || href === '/' + (subpath?.[0] || '');
---

<a
	href={href}
	class:list={[
		'anchor-link',
		className,
		{ active: isActive },
		`inline-block no-underline ${isActive ? 'font-bold' : ''}`,
	]}
	{...props}
>
	<slot />
</a>
